{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1606ac36fb841c5594eba02b6e4c3375ff4d3cf36c810a3c4daef4ac4beec9ad030780b4174c32c679883882c731eeda5b3cf297b1f5bd67d0908692809f5f0f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'hive-playground-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'hive-playground-angular';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<hv-container size=\"fixed\">hive</hv-container>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4aaf0ef2aa5566f5962a3adee227f0c399239aa7230c539bfe78afb2a7d5996ee9a6250f5c0222d4a50c5a4d9f743247be1e5c2087cb6ae55e5571eeb95c2c5c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HiveModule } from '@alexbjr369/hive-angular/dist';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, HiveModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-0dc291a0afd3272506872fe6fa763d13caf4b8fd5fcd9d9673ea721d0260167c3929f23647cd16ac134dd8c37af92788e0497290e40e237a1993e3e2cd47364b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.default.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "Fixed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.fixed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(size: string | undefined) => {\n  if (size) return ` size=\"${size}\"`;\n\n  return '';\n}"
            },
            {
                "name": "Overview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.overview.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Responsive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.default.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HvContainer>",
                "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\">\n      &lt;hv-container&gt;&lt;/hv-container&gt;\n    </hv-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.fixed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HvContainer>",
                "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\" size=${FIXED}>\n      &lt;hv-container size=\"${FIXED}\"&gt;&lt;/hv-container&gt;\n    </hv-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.overview.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HvContainer>",
                "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\" size=${FIXED}>\n      container ${FIXED}: width changes at each breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${SM}>\n      container ${SM}: 100% wide until small breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${MD}>\n      container ${MD}: 100% wide until medium breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${LG}>\n      container ${LG}: 100% wide until large breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${XL}>\n      container ${XL}: 100% wide until extra large breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${XXL}>\n      container ${XXL}: 100% wide until extra extra large breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=\"custom\">container custom: 100% wide until custom breakpoint</hv-container>\n    <hv-container class=\"stories-container\">container: 100% wide at all breakpoints</hv-container>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HvContainer>",
                "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\" size=${args.size}>\n      &lt;hv-container${label(args.size)}&gt;&lt;/hv-container&gt;\n    </hv-container >\n  `,\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.fixed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ContainerSizeAttribute"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/layout/containers/containers.overview.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ContainerSizeAttribute"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/layout/containers/containers.default.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.default.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.default.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HvContainer>",
                    "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\">\n      &lt;hv-container&gt;&lt;/hv-container&gt;\n    </hv-container>\n  `,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "stories/layout/containers/containers.fixed.stories.ts": [
                {
                    "name": "Fixed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.fixed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.fixed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HvContainer>",
                    "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\" size=${FIXED}>\n      &lt;hv-container size=\"${FIXED}\"&gt;&lt;/hv-container&gt;\n    </hv-container>\n  `,\n})"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.fixed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ContainerSizeAttribute"
                }
            ],
            "stories/layout/containers/containers.responsive.stories.ts": [
                {
                    "name": "label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(size: string | undefined) => {\n  if (size) return ` size=\"${size}\"`;\n\n  return '';\n}"
                },
                {
                    "name": "Responsive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HvContainer>",
                    "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\" size=${args.size}>\n      &lt;hv-container${label(args.size)}&gt;&lt;/hv-container&gt;\n    </hv-container >\n  `,\n})"
                }
            ],
            "stories/layout/containers/containers.overview.stories.ts": [
                {
                    "name": "Overview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.overview.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.overview.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HvContainer>",
                    "defaultValue": "(args: HvContainer) => ({\n  props: args,\n  template: `\n    <hv-container class=\"stories-container\" size=${FIXED}>\n      container ${FIXED}: width changes at each breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${SM}>\n      container ${SM}: 100% wide until small breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${MD}>\n      container ${MD}: 100% wide until medium breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${LG}>\n      container ${LG}: 100% wide until large breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${XL}>\n      container ${XL}: 100% wide until extra large breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=${XXL}>\n      container ${XXL}: 100% wide until extra extra large breakpoint\n    </hv-container>\n    <hv-container class=\"stories-container\" size=\"custom\">container custom: 100% wide until custom breakpoint</hv-container>\n    <hv-container class=\"stories-container\">container: 100% wide at all breakpoints</hv-container>\n  `,\n})"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/layout/containers/containers.overview.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ContainerSizeAttribute"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.default.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.fixed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fixed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.fixed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.fixed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.overview.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Overview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.overview.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.overview.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Responsive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/layout/containers/containers.responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}